// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Type {
  user
  admin
}

model AccountData {
  id          Int        @id @default(autoincrement())
  fullName    String
  email       String     @unique
  password    String
  is_verified Boolean    @default(false)
  type        Type
  noPhone     String
  userData    UserDetail @relation(fields: [id], references: [id])
  updatedAt   DateTime   @updatedAt
  createdAt   DateTime   @default(now())
  Event       Event[]

  @@index([email])
  @@map("accountdata")
}

model UserDetail {
  id              Int          @id @default(autoincrement())
  promoId         Int?
  point           Int          @default(0)
  referalCode     String?
  yourReferalCode String?      @unique
  expReferalCode  DateTime?
  AccountData     AccountData?

  @@map("userdetail")
}

enum Status {
  Publish
  Hidden
}

enum Category {
  Concert
  Expo
  Play
  Workshop
  Sport
}

enum City {
  Jakarta
  Bogor
  Depok
  Tangerang
  Bekasi
}

model Event {
  id         Int          @id @default(autoincrement())
  adminId    Int
  admin      AccountData  @relation(fields: [adminId], references: [id])
  title      String       @unique
  status     Status
  category   Category
  location   String
  imgEvent   String?
  imgSeat    String?
  date       DateTime
  startTime  DateTime
  finishTime DateTime
  city       City
  desc       String
  promo      Float?
  updatedAt  DateTime     @updatedAt
  createdAt  DateTime     @default(now())
  EventPrice EventPrice[]

  @@map("events")
}

model EventPrice {
  id            Int      @id @default(autoincrement())
  categoryEvent String?  @unique
  qty           Int
  price         Float
  updatedAt     DateTime @updatedAt
  createdAt     DateTime @default(now())
  Event         Event?   @relation(fields: [eventId], references: [id])
  eventId       Int?
}
